//--------------------------------------------------------------------------------
//　time.h
//  Author : 徐文杰(KodFreedom)
//--------------------------------------------------------------------------------
#pragma once
#include <windows.h>

//--------------------------------------------------------------------------------
//  タイムクラス
//--------------------------------------------------------------------------------
class GameTimer
{
public:
    //--------------------------------------------------------------------------------
    //  定数定義
    //--------------------------------------------------------------------------------
    static constexpr float kFramePerSecond = 60.0f; // FPS
    static constexpr float kTimeInterval = 1.0f / kFramePerSecond; // 更新間隔

    //--------------------------------------------------------------------------------
    //  instance生成処理
    //  return：Time*
    //--------------------------------------------------------------------------------
    static GameTimer* Create(void);

    //--------------------------------------------------------------------------------
    //  破棄処理
    //--------------------------------------------------------------------------------
    static void Release(void);

    //--------------------------------------------------------------------------------
    //  インスタンスを返す
    //--------------------------------------------------------------------------------
    static GameTimer& Instance(void)
    {
        return *instance_;
    }

    //--------------------------------------------------------------------------------
    //  Delta timeの取得
    //--------------------------------------------------------------------------------
    float DeltaTime(void) const { return delta_time_; }

    //--------------------------------------------------------------------------------
    //  Time scaleの取得
    //--------------------------------------------------------------------------------
    float TimeScale(void) const { return time_scale_; }

    //--------------------------------------------------------------------------------
    //  Time scaleの設定
    //--------------------------------------------------------------------------------
    void SetTimeScale(const float time_scale) { time_scale_ = time_scale; }

    //--------------------------------------------------------------------------------
    //  Scaled Delta timeの取得
    //--------------------------------------------------------------------------------
    float ScaledDeltaTime(void) const { return scaled_delta_time_; }

    //--------------------------------------------------------------------------------
    //  フレーム実行出来るかをチェック
    //--------------------------------------------------------------------------------
    bool CanUpdateFrame(void);

private:
    //--------------------------------------------------------------------------------
    //  constructors for singleton / シングルトンのコンストラクタ
    //--------------------------------------------------------------------------------
    GameTimer()
    {
        memset(&frequency_, 0x00, sizeof frequency_);
        memset(&current_time_, 0x00, sizeof current_time_);
        memset(&exec_last_time_, 0x00, sizeof exec_last_time_);
        memset(&fps_last_time_, 0x00, sizeof fps_last_time_);
        QueryPerformanceCounter(&exec_last_time_);
        fps_last_time_ = exec_last_time_;
    }
    GameTimer(const GameTimer& value) {}
    GameTimer& operator=(const GameTimer& value) {}
    ~GameTimer() {}

    //--------------------------------------------------------------------------------
    //  変数定義
    //--------------------------------------------------------------------------------
    LARGE_INTEGER frequency_;
    LARGE_INTEGER current_time_;
    LARGE_INTEGER exec_last_time_;
    LARGE_INTEGER fps_last_time_;
    float delta_time_ = 0.0f;
    float time_scale_ = 0.0f;
    float scaled_delta_time_ = 0.0f;
    static GameTimer* instance_; // インスタンス
};